{"version":3,"file":"static/js/879.cec8fe47.chunk.js","mappings":"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","sources":["components/header/top-login.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport {Formik, Field, Form} from 'formik';\nimport makeRequest from \"../utils/fetch-request\";\nimport {toast, ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {setLocalStorage, getFromLocalStorage} from '../utils/local-storage';\n\n\nconst HeaderLogin = (props) => {\n    const [isLoading, setIsLoading] = useState(null)\n    const [message, setMessage] = useState(null);\n    const [user, ] = useState(getFromLocalStorage(\"user\"));\n    const {setUser} = props;\n\n    const initialValues = {\n        msisdn: \"\",\n        password: \"\"\n    }\n\n    const Notify = (message) => {\n        let options = {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            toastId: 673738 /* this is hack to prevent multiple toasts */\n        }\n        if (message.status === 200) {\n            toast.success(`${message.message}`, options);\n        } else {\n            toast.error(`${message.message}`, options);\n        }\n\n    };\n\n    const dispatchUser = useCallback(() => {\n        if (message !== null) {\n            Notify(message);\n\n            if (message.status == 200) {\n                setLocalStorage('user', message.user);\n                setUser(message.user);\n            }\n\n        }\n    }, [message])\n\n    useEffect(() => {\n        dispatchUser();\n    }, [dispatchUser]);\n\n    const handleSubmit = values => {\n        let endpoint = '/v1/login';\n        setIsLoading(true)\n        makeRequest({url: endpoint, method: 'POST', data: values}).then(([status, response]) => {\n\n            setIsLoading(false)\n            if (status === 200 || status == 201 || status == 204) {\n                setMessage(response);\n            } else {\n                let message = {\n                    status: status,\n                    message: response?.message || \"Error attempting to login\"\n                };\n                Notify(message);\n            }\n        })\n    }\n\n\n    const validate = values => {\n\n        let errors = {}\n\n        if (!values.msisdn || !values.msisdn.match(/(\\+?255|0|)?\\d{9}/g)) {\n            errors.msisdn = 'Invalid phone number'\n        }\n\n        if (!values.password || values.password.length < 4) {\n            errors.password = \"Invalid password\";\n        }\n\n        return errors\n    }\n\n\n  const MyLoginForm = (props) => {\n    const {isValid, errors, values, submitForm, setFieldValue} = props;\n\n    const onFieldChanged = (ev) => {\n        let field = ev.target.name;\n        let value = ev.target.value;\n        setFieldValue(field, value);\n    }\n    return (\n        <>\n            <Form className=\"ow i web-element\" style={{marginTop: \"10px\"}}>\n                <Row>\n                    <div className=\"col-5\">\n                        <input type=\"text\"\n                               name=\"msisdn\"\n                               className={`top-login-input-field ${errors.msisdn && 'text-danger'}`}\n                               style={{width:\"100%\"}}\n                               data-action=\"grow\"\n                               placeholder={errors.msisdn || \"+255.........\"}\n                               onChange={ev => onFieldChanged(ev)}\n                               value={values.msisdn}\n                        />\n                        <br/>\n                        <span className=\"sticky-hidden\">\n                        <label>\n                           <input type=\"checkbox\" name=\"remember\" value=\"1\"/> \n                            Remember Me\n                        </label>\n                    </span>\n                    </div>\n                    <div className=\"col-5\">\n                        <input type=\"password\"\n                               name=\"password\"\n                               className={`top-login-input-field ${errors.password && 'text-danger'} `}\n                               data-action=\"grow\"\n                               style={{width:\"100%\"}}\n                               placeholder={errors.password || \"Password\"}\n                               onChange={ev => onFieldChanged(ev)}\n                               value={values.password}\n                        />\n                        <br/>\n                        <input type=\"hidden\" name=\"ref\" value=\"{props.refURL}\"/>\n                        <a href=\"/reset-password\" title=\"Reset password\">\n                            <span className=\"sticky-hidden\">Forgot Password?</span>\n                        </a>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <button className=\"cg login-button btn\" type=\"submit\">\n                            <span>LOGIN</span>\n                        </button>\n                    </div>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\n\n    const LoginForm = (props) => {\n        return (\n            <Formik\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validateOnChange={false}\n                validateOnBlur={false}\n                validate={validate}\n            >{(props) => <MyLoginForm {...props} />}</Formik>\n        );\n    }\n\n    return (\n        <Container className=\"top-login-section\">\n            <Row style={{marginBottom:\"10px\"}}>\n                <Col xs={3}className=\"d-inline-flex justify-content-center\" style={{margin:\"auto\"}}>\n                    <ToastContainer/>\n\n                    { user && \n                        <a className=\"filter-icon\" href=\"/deposit\" title=\"Deposit\" style={{ fontSize: \"16px\", fontWeight: \"bold\", background:\"#39b54a\", padding:\"5px 20px\"}} >\n                                    <span className=\"register-label\">DEPOSIT</span>\n                                </a>\n                    }\n                    <a className=\"filter-icon\" href=\"/signup\" title=\"Join Now\" style={{ fontSize: \"16px\"}}>\n                        <span className=\"register-label\">Register Now!</span>\n                    </a>\n                </Col>\n                <Col xs={6}><LoginForm/></Col>\n            </Row>\n        </Container>\n    )\n}\nexport default React.memo(HeaderLogin);\n"],"names":["HeaderLogin","props","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useState3","_useState4","message","setMessage","_useState5","getFromLocalStorage","user","setUser","initialValues","msisdn","password","Notify","options","position","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toastId","status","concat","dispatchUser","useCallback","setLocalStorage","useEffect","handleSubmit","values","makeRequest","url","method","data","then","_ref","_ref2","response","validate","errors","match","length","MyLoginForm","isValid","setFieldValue","submitForm","onFieldChanged","ev","field","target","name","value","_jsx","_Fragment","children","Form","className","style","marginTop","_jsxs","Row","type","width","placeholder","onChange","href","title","LoginForm","Formik","onSubmit","validateOnChange","validateOnBlur","_objectSpread","Container","marginBottom","Col","xs","margin","ToastContainer","fontSize","fontWeight","background","padding","React"],"sourceRoot":""}